[{"/Users/edehe/react-apps/banime/src/index.js":"1","/Users/edehe/react-apps/banime/src/App.js":"2","/Users/edehe/react-apps/banime/src/api/Jikan.js":"3","/Users/edehe/react-apps/banime/src/app/store.js":"4","/Users/edehe/react-apps/banime/src/features/topAnimeList/topAnimeListSlice.js":"5","/Users/edehe/react-apps/banime/src/features/topAnimeList/AnimeList.js":"6","/Users/edehe/react-apps/banime/src/features/topAnimeList/AnimeExcerpt.js":"7","/Users/edehe/react-apps/banime/src/features/topAnimeList/SingleAnimePage.js":"8","/Users/edehe/react-apps/banime/src/app/Navbar.js":"9","/Users/edehe/react-apps/banime/src/features/search/searchSlice.js":"10","/Users/edehe/react-apps/banime/src/features/search/ResultsList.js":"11","/Users/edehe/react-apps/banime/src/features/search/Result.js":"12","/Users/edehe/react-apps/banime/src/features/search/Searchbar.js":"13","/Users/edehe/react-apps/banime/src/features/info/infoSlice.js":"14","/Users/edehe/react-apps/banime/src/features/info/InfoPage.js":"15","/Users/edehe/react-apps/banime/src/features/info/MangaInfo.js":"16","/Users/edehe/react-apps/banime/src/features/info/AnimeInfo.js":"17","/Users/edehe/react-apps/banime/src/features/info/PersonInfo.js":"18","/Users/edehe/react-apps/banime/src/features/info/RelatedAnimeTitles.js":"19","/Users/edehe/react-apps/banime/src/features/anime/AnimePage.js":"20","/Users/edehe/react-apps/banime/src/features/anime/RelatedAnimeTitles.js":"21","/Users/edehe/react-apps/banime/src/features/anime/animeSlice.js":"22","/Users/edehe/react-apps/banime/src/features/anime/index.js":"23","/Users/edehe/react-apps/banime/src/features/anime/Videos.js":"24"},{"size":368,"mtime":1616934099592,"results":"25","hashOfConfig":"26"},{"size":682,"mtime":1616960449607,"results":"27","hashOfConfig":"26"},{"size":994,"mtime":1616962746894,"results":"28","hashOfConfig":"26"},{"size":475,"mtime":1616953687419,"results":"29","hashOfConfig":"26"},{"size":981,"mtime":1616778845398,"results":"30","hashOfConfig":"26"},{"size":918,"mtime":1616773521951,"results":"31","hashOfConfig":"26"},{"size":1135,"mtime":1616782108601,"results":"32","hashOfConfig":"26"},{"size":394,"mtime":1616779070171,"results":"33","hashOfConfig":"26"},{"size":338,"mtime":1616924308842,"results":"34","hashOfConfig":"26"},{"size":919,"mtime":1616858256760,"results":"35","hashOfConfig":"26"},{"size":2812,"mtime":1616858477581,"results":"36","hashOfConfig":"26"},{"size":770,"mtime":1616847783199,"results":"37","hashOfConfig":"26"},{"size":1783,"mtime":1616924655553,"results":"38","hashOfConfig":"26"},{"size":1021,"mtime":1616950207090,"results":"39","hashOfConfig":"26"},{"size":1045,"mtime":1616954204842,"results":"40","hashOfConfig":"26"},{"size":801,"mtime":1616857712109,"results":"41","hashOfConfig":"26"},{"size":5000,"mtime":1616950179133,"results":"42","hashOfConfig":"26"},{"size":576,"mtime":1616869842705,"results":"43","hashOfConfig":"26"},{"size":1020,"mtime":1616949238191,"results":"44","hashOfConfig":"26"},{"size":4922,"mtime":1616966382996,"results":"45","hashOfConfig":"26"},{"size":973,"mtime":1616950965639,"results":"46","hashOfConfig":"26"},{"size":1342,"mtime":1617005882097,"results":"47","hashOfConfig":"26"},{"size":1029,"mtime":1616963188573,"results":"48","hashOfConfig":"26"},{"size":2661,"mtime":1617007762899,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"hg9lds",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/edehe/react-apps/banime/src/index.js",[],["108","109"],"/Users/edehe/react-apps/banime/src/App.js",[],"/Users/edehe/react-apps/banime/src/api/Jikan.js",[],"/Users/edehe/react-apps/banime/src/app/store.js",[],"/Users/edehe/react-apps/banime/src/features/topAnimeList/topAnimeListSlice.js",[],"/Users/edehe/react-apps/banime/src/features/topAnimeList/AnimeList.js",[],"/Users/edehe/react-apps/banime/src/features/topAnimeList/AnimeExcerpt.js",[],"/Users/edehe/react-apps/banime/src/features/topAnimeList/SingleAnimePage.js",[],["110","111"],"/Users/edehe/react-apps/banime/src/app/Navbar.js",["112"],"import { Box, Flex } from '@chakra-ui/layout';\nimport { Link } from '@reach/router';\nimport React from 'react';\nimport { Searchbar } from '../features/search/Searchbar';\n\nexport const Navbar = () => {\n  return (\n    <Flex>\n      <Link to=\"/\" className=\"navbar-brand\">\n        Banime.\n      </Link>\n      <Searchbar />\n    </Flex>\n  );\n};\n","/Users/edehe/react-apps/banime/src/features/search/searchSlice.js",[],"/Users/edehe/react-apps/banime/src/features/search/ResultsList.js",[],"/Users/edehe/react-apps/banime/src/features/search/Result.js",[],"/Users/edehe/react-apps/banime/src/features/search/Searchbar.js",["113","114","115"],"import { Button } from '@chakra-ui/button';\nimport { Input, InputGroup, InputRightAddon } from '@chakra-ui/input';\nimport { Flex } from '@chakra-ui/layout';\nimport { Select } from '@chakra-ui/select';\nimport { navigate } from '@reach/router';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { clearResults } from './searchSlice';\n\nexport const Searchbar = () => {\n  const dispatch = useDispatch();\n  const [searchInput, setSearchInput] = useState('');\n  const [searchCategory, setSearchCategory] = useState('Anime');\n  const onSearchChange = (e) => {\n    setSearchInput(e.target.value);\n  };\n  const onSearchCategoryChange = (e) => {\n    setSearchCategory(e.target.value);\n  };\n  const onSearchSubmit = (e) => {\n    e.preventDefault();\n    if (searchInput) {\n      dispatch(clearResults());\n      setSearchInput('');\n      navigate(`/search/${searchCategory.toLowerCase()}/${searchInput}`);\n    }\n  };\n  return (\n    <form onSubmit={onSearchSubmit}>\n      <Flex>\n        <Select onChange={onSearchCategoryChange}>\n          <option value=\"anime\">Anime</option>\n          <option value=\"manga\">Manga</option>\n          <option value=\"person\">Person</option>\n          <option value=\"character\">Character</option>\n        </Select>\n        <Input\n          value={searchInput}\n          onChange={onSearchChange}\n          placeholder=\"Search Anime, Manga, and more... \"\n        />\n      </Flex>\n\n      {/* <input\n        value={searchInput}\n        onChange={onSearchChange}\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"Search Anime, Manga, and more... \"\n      /> */}\n      {/* <button type=\"submit\" className=\"btn btn-secondary\">\n        <i className=\"bi bi-search\"></i>\n      </button> */}\n    </form>\n  );\n};\n","/Users/edehe/react-apps/banime/src/features/info/infoSlice.js",[],"/Users/edehe/react-apps/banime/src/features/info/InfoPage.js",[],"/Users/edehe/react-apps/banime/src/features/info/MangaInfo.js",[],["116","117"],"/Users/edehe/react-apps/banime/src/features/info/AnimeInfo.js",["118","119","120"],"import { Image } from '@chakra-ui/image';\nimport {\n  AspectRatio,\n  Center,\n  Container,\n  Flex,\n  Heading,\n  Spacer,\n  Text,\n  Link,\n  Divider,\n} from '@chakra-ui/layout';\nimport { StarIcon } from '@chakra-ui/icons';\nimport { Box, Tab, TabList, TabPanels, Tabs, TabPanel } from '@chakra-ui/react';\nimport React, { useEffect } from 'react';\nimport { Link as ReachLink } from '@reach/router';\nimport { RelatedAnimeTitles } from './RelatedAnimeTitles';\nimport { useDispatch } from 'react-redux';\nimport { fetchVideos } from './infoSlice';\n\nexport const AnimeInfo = ({ anime }) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchVideos(anime.mal_id));\n  }, [anime.mal_id, dispatch]);\n  return (\n    <>\n      <Container maxW=\"container.lg\">\n        <Flex direction={['column', 'row']}>\n          <Box w={['100%', '25%']}>\n            <Image src={anime.image_url} alt={anime.title} borderRadius=\"lg\" />\n            <Flex align=\"center\">\n              <Text fontSize=\"4xl\" mr=\"1\">\n                {anime.score}\n              </Text>\n              <Box fontWeight=\"semibold\" fontSize=\"xs\">\n                <Text>#{anime.popularity}</Text>\n                <Text>by {anime.members} users</Text>\n              </Box>\n            </Flex>\n            <Box fontSize=\"sm\" fontWeight=\"medium\">\n              <Text>Type: {anime.type}</Text>\n              <Divider />\n              <Text>Episodes: {anime.episodes}</Text>\n              <Divider />\n              <Text>Status: {anime.status ? anime.status : '-'}</Text>\n              <Divider />\n              <Text>Aired: </Text>\n              <Divider />\n              <Text>Producers: </Text>\n              <Divider />\n              <Text>Licensors: </Text>\n              <Divider />\n              <Text>Studios: </Text>\n              <Divider />\n              <Text>Source: {anime.source ? anime.source : '-'}</Text>\n              <Divider />\n              <Text>Genres: </Text>\n              <Divider />\n              <Text>Duration: {anime.duration ? anime.duration : '-'}</Text>\n              <Divider />\n              <Text>Rating: {anime.rating ? anime.rating : '-'}</Text>\n            </Box>\n          </Box>\n          <Spacer />\n          <Box w={['100%', '70%']}>\n            <Box>\n              <Heading size=\"lg\">{anime.title_english ? anime.title_english : anime.title}</Heading>\n              <Text mb=\"2\">{anime.title_japanese}</Text>\n              <p>\n                By{' '}\n                <Link color=\"blue.600\" as={ReachLink} to=\"/\">\n                  {anime.studios[0] ? anime.studios[0].name : ''}\n                </Link>\n              </p>\n              <Tabs>\n                <TabList>\n                  <Tab>Details</Tab>\n                  <Tab>Videos</Tab>\n                </TabList>\n\n                <TabPanels>\n                  <TabPanel>\n                    <Heading size=\"md\" pb=\"1rem\">\n                      Synopsis\n                    </Heading>\n                    <p>{anime.synopsis}</p>\n                  </TabPanel>\n                  <TabPanel>\n                    <Heading size=\"md\" mb=\"4\">\n                      Trailer\n                    </Heading>\n                    <AspectRatio ratio={16 / 9}>\n                      <iframe\n                        src={anime.trailer_url}\n                        title=\"Trailer\"\n                        allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                      ></iframe>\n                    </AspectRatio>\n                  </TabPanel>\n                </TabPanels>\n              </Tabs>\n            </Box>\n            <Divider border=\"2\" borderColor=\"gray.200\" opacity=\"1\" />\n            <Box p=\"4\">\n              <RelatedAnimeTitles related={anime.related} />\n            </Box>\n          </Box>\n        </Flex>\n      </Container>\n    </>\n  );\n};\n\n{\n  /* <Heading py=\"4\" size=\"lg\">\n{anime.title}\n</Heading>\n<Flex direction={['column', 'row']} pb=\"4\">\n<Center>\n  <Image src={anime.image_url} alt={anime.title} borderRadius=\"lg\" />\n</Center>\n<Spacer />\n<Box>\n  <p></p>\n  <Text>\n    <StarIcon />\n    {anime.score}\n  </Text>\n\n  <small className=\"text-secondary fw-light\">({anime.members} users)</small>\n  <p>\n    Ranked: <b>#{anime.rank}</b>\n  </p>\n  <p>\n    {anime.type} ({anime.episodes}eps)\n  </p>\n  <p className=\"mb-0\">\n    <small className=\"text-secondary\">Aired</small>\n  </p>\n  <p>{anime.aired ? anime.aired.from : null}</p>\n  <p className=\"mb-0\">\n    <small className=\"text-secondary\">Studios</small>\n  </p>\n  <p>{anime.studios[0].name}</p>\n</Box>\n</Flex>\n\n<Box mb=\"4\">\n<Heading size=\"md\" pb=\"1rem\">\n  Synopsis\n</Heading>\n<p>{anime.synopsis}</p>\n<h5>Background</h5>\n<p>{anime.background}</p>\n</Box>\n<Heading size=\"md\" mb=\"4\">\nTrailer\n</Heading>\n<AspectRatio ratio={16 / 9}>\n<iframe\n  src={anime.trailer_url}\n  title=\"Trailer\"\n  allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n  allowFullScreen\n></iframe>\n</AspectRatio> */\n}\n","/Users/edehe/react-apps/banime/src/features/info/PersonInfo.js",[],"/Users/edehe/react-apps/banime/src/features/info/RelatedAnimeTitles.js",["121","122","123","124"],"import React, { useEffect } from 'react';\nimport { Box, Heading, Link, ListItem, List } from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { fetchAnimePhoto } from './infoSlice';\nimport { Link as ReachLink } from '@reach/router';\n\nexport const RelatedAnimeTitles = ({ related }) => {\n  const renderTitles = () => {\n    return Object.keys(related).map((category) => {\n      const titles = related[category].map((title) => (\n        <ListItem key={nanoid()}>\n          <Link as={ReachLink} to={`/anime/${title.mal_id}`} color=\"blue.600\">\n            {title.name}\n          </Link>\n        </ListItem>\n      ));\n      return (\n        <Box key={nanoid()} mb=\"4\">\n          <Heading size=\"sm\" mb=\"1\">\n            {category}\n          </Heading>\n          <List>{titles}</List>\n        </Box>\n      );\n    });\n  };\n  return (\n    <>\n      <Heading size=\"md\" mb=\"4\">\n        Related Titles\n      </Heading>\n      {renderTitles()}\n    </>\n  );\n};\n","/Users/edehe/react-apps/banime/src/features/anime/AnimePage.js",["125","126","127","128","129","130","131","132","133"],"import { Image } from '@chakra-ui/image';\nimport {\n  AspectRatio,\n  Center,\n  Container,\n  Flex,\n  Heading,\n  Spacer,\n  Text,\n  Link,\n  Divider,\n} from '@chakra-ui/layout';\nimport { StarIcon } from '@chakra-ui/icons';\nimport { Box, Tab, TabList, TabPanels, Tabs, TabPanel } from '@chakra-ui/react';\nimport React, { useEffect } from 'react';\nimport { Link as ReachLink } from '@reach/router';\nimport { RelatedAnimeTitles } from './RelatedAnimeTitles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAnime, fetchVideos } from './animeSlice';\nimport { Videos } from './Videos';\n\nexport const AnimePage = ({ anime }) => {\n  console.log(anime);\n  // const dispatch = useDispatch();\n\n  return (\n    <>\n      <Container maxW=\"container.lg\">\n        <Flex direction={['column', 'row']}>\n          <Box w={['100%', '25%']}>\n            <Image src={anime.image_url} alt={anime.title} borderRadius=\"lg\" />\n            <Flex align=\"center\">\n              <Text fontSize=\"4xl\" mr=\"1\">\n                {anime.score}\n              </Text>\n              <Box fontWeight=\"semibold\" fontSize=\"xs\">\n                <Text>#{anime.popularity}</Text>\n                <Text>by {anime.members} users</Text>\n              </Box>\n            </Flex>\n            <Box fontSize=\"sm\" fontWeight=\"medium\">\n              <Text>Type: {anime.type}</Text>\n              <Divider />\n              <Text>Episodes: {anime.episodes}</Text>\n              <Divider />\n              <Text>Status: {anime.status ? anime.status : '-'}</Text>\n              <Divider />\n              <Text>Aired: </Text>\n              <Divider />\n              <Text>Producers: </Text>\n              <Divider />\n              <Text>Licensors: </Text>\n              <Divider />\n              <Text>Studios: </Text>\n              <Divider />\n              <Text>Source: {anime.source ? anime.source : '-'}</Text>\n              <Divider />\n              <Text>Genres: </Text>\n              <Divider />\n              <Text>Duration: {anime.duration ? anime.duration : '-'}</Text>\n              <Divider />\n              <Text>Rating: {anime.rating ? anime.rating : '-'}</Text>\n            </Box>\n          </Box>\n          <Spacer />\n          <Box w={['100%', '70%']}>\n            <Box>\n              <Heading size=\"lg\">{anime.title_english ? anime.title_english : anime.title}</Heading>\n              <Text mb=\"2\">{anime.title_japanese}</Text>\n              <p>\n                By{' '}\n                <Link color=\"blue.600\" as={ReachLink} to=\"/\">\n                  {anime.studios[0] ? anime.studios[0].name : ''}\n                </Link>\n              </p>\n              <Tabs isLazy>\n                <TabList overflowX=\"scroll\" pb=\"4\">\n                  <Tab>Details</Tab>\n                  <Tab>Videos</Tab>\n                  <Tab>Episodes</Tab>\n                  <Tab>Reviews</Tab>\n                  <Tab>Recommendations</Tab>\n                  <Tab>Stats</Tab>\n                  <Tab>News</Tab>\n                  <Tab>Forum</Tab>\n                  <Tab>Featured</Tab>\n                  <Tab>Clubs</Tab>\n                  <Tab>Pictures</Tab>\n                </TabList>\n\n                <TabPanels>\n                  <TabPanel>\n                    <Heading size=\"md\" pb=\"1rem\">\n                      Synopsis\n                    </Heading>\n                    <p>{anime.synopsis}</p>\n                  </TabPanel>\n                  <TabPanel>\n                    <Videos animeId={anime.mal_id} />\n                  </TabPanel>\n                </TabPanels>\n              </Tabs>\n            </Box>\n            <Divider border=\"2\" borderColor=\"gray.200\" opacity=\"1\" />\n            <Box p=\"4\">\n              <RelatedAnimeTitles related={anime.related} />\n            </Box>\n          </Box>\n        </Flex>\n      </Container>\n    </>\n  );\n};\n\n{\n  /* <Heading py=\"4\" size=\"lg\">\n{anime.title}\n</Heading>\n<Flex direction={['column', 'row']} pb=\"4\">\n<Center>\n  <Image src={anime.image_url} alt={anime.title} borderRadius=\"lg\" />\n</Center>\n<Spacer />\n<Box>\n  <p></p>\n  <Text>\n    <StarIcon />\n    {anime.score}\n  </Text>\n\n  <small className=\"text-secondary fw-light\">({anime.members} users)</small>\n  <p>\n    Ranked: <b>#{anime.rank}</b>\n  </p>\n  <p>\n    {anime.type} ({anime.episodes}eps)\n  </p>\n  <p className=\"mb-0\">\n    <small className=\"text-secondary\">Aired</small>\n  </p>\n  <p>{anime.aired ? anime.aired.from : null}</p>\n  <p className=\"mb-0\">\n    <small className=\"text-secondary\">Studios</small>\n  </p>\n  <p>{anime.studios[0].name}</p>\n</Box>\n</Flex>\n\n<Box mb=\"4\">\n<Heading size=\"md\" pb=\"1rem\">\n  Synopsis\n</Heading>\n<p>{anime.synopsis}</p>\n<h5>Background</h5>\n<p>{anime.background}</p>\n</Box>\n<Heading size=\"md\" mb=\"4\">\nTrailer\n</Heading>\n<AspectRatio ratio={16 / 9}>\n<iframe\n  src={anime.trailer_url}\n  title=\"Trailer\"\n  allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n  allowFullScreen\n></iframe>\n</AspectRatio> */\n}\n","/Users/edehe/react-apps/banime/src/features/anime/RelatedAnimeTitles.js",["134","135","136"],"import React, { useEffect } from 'react';\nimport { Box, Heading, Link, ListItem, List } from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { Link as ReachLink } from '@reach/router';\n\nexport const RelatedAnimeTitles = ({ related }) => {\n  const renderTitles = () => {\n    return Object.keys(related).map((category) => {\n      const titles = related[category].map((title) => (\n        <ListItem key={nanoid()}>\n          <Link as={ReachLink} to={`/anime/${title.mal_id}`} color=\"blue.600\">\n            {title.name}\n          </Link>\n        </ListItem>\n      ));\n      return (\n        <Box key={nanoid()} mb=\"4\">\n          <Heading size=\"sm\" mb=\"1\">\n            {category}\n          </Heading>\n          <List>{titles}</List>\n        </Box>\n      );\n    });\n  };\n  return (\n    <>\n      <Heading size=\"md\" mb=\"4\">\n        Related Titles\n      </Heading>\n      {renderTitles()}\n    </>\n  );\n};\n","/Users/edehe/react-apps/banime/src/features/anime/animeSlice.js",[],"/Users/edehe/react-apps/banime/src/features/anime/index.js",["137"],"import React, { useEffect } from 'react';\nimport { AnimePage } from './AnimePage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAnime, fetchVideos } from './animeSlice';\nimport { Spinner } from '@chakra-ui/spinner';\nimport { Center } from '@chakra-ui/layout';\n\nexport const Anime = ({ animeId }) => {\n  const anime = useSelector((state) => state.anime.data);\n  const fetchDataStatus = useSelector((state) => state.anime.fetchDataStatus);\n  const dataError = useSelector((state) => state.anime.dataError);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAnime(animeId));\n  }, [dispatch, animeId]);\n  let content;\n  if (fetchDataStatus === 'pending') {\n    content = (\n      <Center h=\"100vh\">\n        <Spinner />\n      </Center>\n    );\n  } else if (fetchDataStatus === 'fulfilled') {\n    content = <AnimePage anime={anime} />;\n  } else if (fetchDataStatus === 'rejected') {\n    console.log(dataError);\n    content = <div>aww im sooo sowwy :3</div>;\n  }\n  return <>{content}</>;\n};\n","/Users/edehe/react-apps/banime/src/features/anime/Videos.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"138","replacedBy":"142"},{"ruleId":"140","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":1,"column":10,"nodeType":"146","messageId":"147","endLine":1,"endColumn":13},{"ruleId":"144","severity":1,"message":"148","line":1,"column":10,"nodeType":"146","messageId":"147","endLine":1,"endColumn":16},{"ruleId":"144","severity":1,"message":"149","line":2,"column":17,"nodeType":"146","messageId":"147","endLine":2,"endColumn":27},{"ruleId":"144","severity":1,"message":"150","line":2,"column":29,"nodeType":"146","messageId":"147","endLine":2,"endColumn":44},{"ruleId":"138","replacedBy":"151"},{"ruleId":"140","replacedBy":"152"},{"ruleId":"144","severity":1,"message":"153","line":4,"column":3,"nodeType":"146","messageId":"147","endLine":4,"endColumn":9},{"ruleId":"144","severity":1,"message":"154","line":13,"column":10,"nodeType":"146","messageId":"147","endLine":13,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":116,"column":1,"nodeType":"157","messageId":"158","endLine":169,"endColumn":2},{"ruleId":"144","severity":1,"message":"159","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"160","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":21},{"ruleId":"144","severity":1,"message":"161","line":3,"column":23,"nodeType":"146","messageId":"147","endLine":3,"endColumn":34},{"ruleId":"144","severity":1,"message":"162","line":5,"column":10,"nodeType":"146","messageId":"147","endLine":5,"endColumn":25},{"ruleId":"144","severity":1,"message":"163","line":3,"column":3,"nodeType":"146","messageId":"147","endLine":3,"endColumn":14},{"ruleId":"144","severity":1,"message":"153","line":4,"column":3,"nodeType":"146","messageId":"147","endLine":4,"endColumn":9},{"ruleId":"144","severity":1,"message":"154","line":13,"column":10,"nodeType":"146","messageId":"147","endLine":13,"endColumn":18},{"ruleId":"144","severity":1,"message":"159","line":15,"column":17,"nodeType":"146","messageId":"147","endLine":15,"endColumn":26},{"ruleId":"144","severity":1,"message":"160","line":18,"column":10,"nodeType":"146","messageId":"147","endLine":18,"endColumn":21},{"ruleId":"144","severity":1,"message":"161","line":18,"column":23,"nodeType":"146","messageId":"147","endLine":18,"endColumn":34},{"ruleId":"144","severity":1,"message":"164","line":19,"column":10,"nodeType":"146","messageId":"147","endLine":19,"endColumn":20},{"ruleId":"144","severity":1,"message":"165","line":19,"column":22,"nodeType":"146","messageId":"147","endLine":19,"endColumn":33},{"ruleId":"155","severity":1,"message":"156","line":115,"column":1,"nodeType":"157","messageId":"158","endLine":168,"endColumn":2},{"ruleId":"144","severity":1,"message":"159","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"160","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":21},{"ruleId":"144","severity":1,"message":"161","line":3,"column":23,"nodeType":"146","messageId":"147","endLine":3,"endColumn":34},{"ruleId":"144","severity":1,"message":"165","line":4,"column":22,"nodeType":"146","messageId":"147","endLine":4,"endColumn":33},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],["166"],["167"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'InputGroup' is defined but never used.","'InputRightAddon' is defined but never used.",["166"],["167"],"'Center' is defined but never used.","'StarIcon' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'fetchAnimePhoto' is defined but never used.","'AspectRatio' is defined but never used.","'fetchAnime' is defined but never used.","'fetchVideos' is defined but never used.","no-global-assign","no-unsafe-negation"]